upstream php-handler {
    server fpm:9000;
}

server {
    listen 80;
    server_name repository-stg.library.arizona.edu;
    # enforce https
    return 302 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  server_name repository-stg.library.arizona.edu;

  ssl_certificate     /etc/nginx/certs/host.crt;
  ssl_certificate_key /etc/nginx/certs/host.key;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  error_page   500 502 503 504  /50x.html; 

  client_max_body_size 1024M;
  root /opt/filesender/www; 
  index login.php index.html; 

  location = /50x.html { 
      root   /usr/share/nginx/html; 
  } 

  # FastCGI authorizer
  location = /shibauthorizer {
      internal;
      include fastcgi_params;
      fastcgi_pass unix:/run/shibboleth/shibauthorizer.sock;
  }

  # FastCGI responder
  location /Shibboleth.sso {
      include fastcgi_params;
      fastcgi_pass unix:/run/shibboleth/shibresponder.sock;
  }
  
  location / {
      try_files $uri $uri/ /login.php; 
  }

  location ~ (index|rest)\.php {

    include shib_clear_headers;
    shib_request /shibauthorizer;

    # This next shib_request_use_headers should not be necessary, but it is for now.
    shib_request_use_headers on;
    include shib_fastcgi_params;

    # Enable to spoof or quickly test filesender with shibboleth authentication
    #fastcgi_param HTTP_SHIB_CN 'Test User';
    #fastcgi_param HTTP_SHIB_UID 'test_username';
    #fastcgi_param HTTP_SHIB_MAIL 'test_user@abcde.edu';

    fastcgi_split_path_info  ^(.+\.php)(/.+)$;
    fastcgi_param HTTPS on;
    fastcgi_pass  php-handler;
    include       fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_param PATH_INFO       $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info  ^(.+\.php)(/.+)$;
    fastcgi_param HTTPS on;
    fastcgi_pass  php-handler;
    include       fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_param PATH_INFO       $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  location ^~ /simplesaml {
      alias /opt/simplesamlphp/www;
      location ~ ^(?<prefix>/simplesaml)(?<phpfile>.+?\.php)(?<pathinfo>/.*)?$ {

          include fastcgi_params;
          fastcgi_pass php-handler;
          fastcgi_param SCRIPT_FILENAME $document_root$phpfile;
          fastcgi_param PATH_INFO       $pathinfo if_not_empty;
      }

  }
}

