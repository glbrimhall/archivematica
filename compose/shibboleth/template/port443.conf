upstream filesender {
  server unix:/run/php/php7.0-fpm.sock fail_timeout=0s;
}

server {
  listen 80;
  server_name {PUBLICIP};
  # enforce https
  return 302 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  server_name {PUBLICIP};

  ssl_certificate     /etc/nginx/conf.d/host.crt;
  ssl_certificate_key /etc/nginx/conf.d/host.key;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  error_page   500 502 503 504  /50x.html; 

  client_max_body_size 1024M;
  root /opt/filesender/www; 
  index login.php index.html; 

  location = /50x.html { 
      root   /usr/share/nginx/html; 
  } 

  # FastCGI authorizer
  location = /shibauthorizer {
      internal;
      include fastcgi_params;
      fastcgi_pass unix:/run/shibboleth/shibauthorizer.sock;
  }

  # FastCGI responder
  location /Shibboleth.sso {
      include fastcgi_params;
      fastcgi_pass unix:/run/shibboleth/shibresponder.sock;
  }
  
#  location / {
#      try_files $uri /login.php; 
#  }

  location /shibboleth-sp/ {
      alias /etc/shibboleth;
  }

  #
  # Filesender
  #
  location ~ (index|rest)\.php {

    include shib_clear_headers;
    shib_request /shibauthorizer;

    # This next shib_request_use_headers should not be necessary, but it is for now.
    shib_request_use_headers on;
    include shib_fastcgi_params;

    # Only attribute from testshib.org really useable is EPPN
    shib_request_set $shib_eppn $upstream_http_variable_eppn;
    fastcgi_param EPPN $shib_eppn;

    fastcgi_split_path_info  ^(.+\.php)(/.+)$;
    fastcgi_param HTTPS on;
    fastcgi_pass  filesender;
    include       fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_param PATH_INFO       $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

    sub_filter "https://{PUBLICIP}/index.php" "https://{PUBLICIP}/upload/index.php";
    sub_filter "https://{PUBLICIP}/rest.php"  "https://{PUBLICIP}/upload/rest.php";
      sub_filter_once off;
   }

  location ~ [^/upload]\.php(/|$) {

    include shib_clear_headers;
    shib_request /shibauthorizer;

    # This next shib_request_use_headers should not be necessary, but it is for now.
    shib_request_use_headers on;
    include shib_fastcgi_params;

    # Only attribute from testshib.org really useable is EPPN
    shib_request_set $shib_eppn $upstream_http_variable_eppn;
    fastcgi_param EPPN $shib_eppn;

    rewrite /upload/(.*)$ /$1 break;
    fastcgi_split_path_info  ^(.+\.php)(/.+)$;
    fastcgi_param HTTPS on;
    fastcgi_pass  filesender;
    include       fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_param PATH_INFO       $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  rewrite /upload/?$ /upload/login.php;
  
  location /upload {

    root /opt/filesender/www;

    location /upload {

      include shib_clear_headers;
      shib_request /shibauthorizer;
  
      # This next shib_request_use_headers should not be necessary, but it is for now.
      shib_request_use_headers on;
      include shib_fastcgi_params;
  
      # Only attribute from testshib.org really useable is EPPN
      shib_request_set $shib_eppn $upstream_http_variable_eppn;
      fastcgi_param EPPN $shib_eppn;

      rewrite /upload/(.*)$ /$1 break;
      try_files $uri $uri/ index.php;
      }

  location ~ [^/upload]\.php(/|$) {

    include shib_clear_headers;
    shib_request /shibauthorizer;

    # This next shib_request_use_headers should not be necessary, but it is for now.
    shib_request_use_headers on;
    include shib_fastcgi_params;

    # Only attribute from testshib.org really useable is EPPN
    shib_request_set $shib_eppn $upstream_http_variable_eppn;
    fastcgi_param EPPN $shib_eppn;

    rewrite /upload/(.*)$ /$1 break;
    fastcgi_split_path_info  ^(.+\.php)(/.+)$;
    fastcgi_param HTTPS on;
    fastcgi_pass  filesender;
    include       fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_param PATH_INFO       $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
  }
  #
  # Archivematica branding
  #
  location /favicon.ico {
    root /opt/brand;
  }
  
  #
  # Archivematica dashboard
  #
  #rewrite ^/status/(.*)  /dashboard/status/$1 break;

#  location /status/ {
#
#    #rewrite /dashboard/(.*)$ /$1 break;
#    
#    include shib_clear_headers;
#    shib_request /shibauthorizer;
#
#    # This next shib_request_use_headers should not be necessary, but it is for now.
#    shib_request_use_headers on;
#    include shib_fastcgi_params;
#
#    # Enable to spoof or quickly test filesender with shibboleth authentication
#    #fastcgi_param HTTP_SHIB_CN 'Test User';
#    #fastcgi_param HTTP_SHIB_UID 'test_username';
#    #fastcgi_param HTTP_SHIB_MAIL 'test_user@abcde.edu';
#
#    #proxy_set_header Host $http_host;
#    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#
#    proxy_read_timeout 172800s;
#    proxy_set_header Accept-Encoding "";
#    proxy_pass       http://amatica/;
#    proxy_redirect   http://amatica/ https://{PUBLICIP}/status/;
#    proxy_redirect   http://localhost:8000/ https://{PUBLICIP}/storage/;
#    proxy_redirect   http://localhost/ https://{PUBLICIP}/status/;
#  }

  location / {

    #rewrite /dashboard/(.*)$ /$1 break;
    
    include shib_clear_headers;
    shib_request /shibauthorizer;

    # This next shib_request_use_headers should not be necessary, but it is for now.
    shib_request_use_headers on;
    include shib_fastcgi_params;

    # Enable to spoof or quickly test filesender with shibboleth authentication
    #fastcgi_param HTTP_SHIB_CN 'Test User';
    #fastcgi_param HTTP_SHIB_UID 'test_username';
    #fastcgi_param HTTP_SHIB_MAIL 'test_user@abcde.edu';

    #proxy_set_header Host $http_host;
    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_read_timeout 172800s;
#    proxy_set_header Accept-Encoding "";
    proxy_pass       http://amatica/;
    proxy_redirect   http://amatica/ https://{PUBLICIP}/;
    proxy_redirect   http://localhost:8000/ https://{PUBLICIP}/storage/;
    proxy_redirect   http://localhost/ https://{PUBLICIP}/;
#    sub_filter_once off;
#    sub_filter  "https://{PUBLICIP}/" "https://{PUBLICIP}/dashboard/";
#    sub_filter  "https://{PUBLICIP}:8000/" "https://{PUBLICIP}/storage/";
#    sub_filter  'href="/'           'href="/dashboard/';
#    sub_filter  "href='/"           "href='/dashboard/";
#    sub_filter  '/?'                '/dashboard/?';
#    sub_filter  '/media/'           '/dashboard/media/';
#    sub_filter  '/status/'          '/dashboard/status/';
#    sub_filter  '/transfer/'        '/dashboard/transfer/';
#    sub_filter  '/installer/'       '/dashboard/installer/';
#    sub_filter  '/administration/'  '/dashboard/administration/';
  }

#  location /media {
#    alias /opt/dashboard/media;
#    sub_filter_once off;
#    sub_filter  "https://{PUBLICIP}/" "https://{PUBLICIP}/dashboard/";
#    sub_filter  "https://{PUBLICIP}:8000/" "https://{PUBLICIP}/storage/";
#    sub_filter  'href="/'           'href="/dashboard/';
#    sub_filter  "href='/"           "href='/dashboard/";
#    sub_filter  '/login/'           '/dashboard/login/';
#    sub_filter  '/status/'          '/dashboard/status/';
#    sub_filter  '/installer/'       '/dashboard/installer/';
#    sub_filter  '/administration/'  '/dashboard/administration/';
#  }

  #
  # Archivematica storage-server
  #
#  rewrite ^/storage https://$server_name/storage/ break;
#  rewrite ^/login/   https://$server_name/storage/login/ break;
  #rewrite ^/storage  /storage/ last;
#  rewrite ^/login/   /storage/login/ last;
  #return 302;

  location /storage/ {

    #rewrite /storage/(.*)$ /$1 break;
    
    include shib_clear_headers;
    shib_request /shibauthorizer;

    # This next shib_request_use_headers should not be necessary, but it is for now.
    shib_request_use_headers on;
    include shib_fastcgi_params;

    # Enable to spoof or quickly test filesender with shibboleth authentication
    #fastcgi_param HTTP_SHIB_CN 'Test User';
    #fastcgi_param HTTP_SHIB_UID 'test_username';
    #fastcgi_param HTTP_SHIB_MAIL 'test_user@abcde.edu';

    #proxy_set_header Host $http_host;
    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  
    proxy_read_timeout 172800s;
    proxy_set_header Accept-Encoding "";
    proxy_pass       http://amatica:8000/;
    #proxy_redirect   http://amatica:8000/ https://{PUBLICIP}/storage/;
    #proxy_redirect   http://localhost:8000/ https://{PUBLICIP}/storage/;
    sub_filter_once off;
    sub_filter  "https://{PUBLICIP}/" "https://{PUBLICIP}/storage/";
    sub_filter  'href="/'           'href="/storage/';
    sub_filter  "href='/"           "href='/storage/";
    sub_filter  '/login/'           '/storage/login/';
    sub_filter  '/static/'          '/storage/static/';
    sub_filter  '/pipelines/'       '/storage/pipelines/';
    sub_filter  '/spaces/'          '/storage/spaces/';
    sub_filter  '/locations/'       '/storage/locations/';
    sub_filter  '/packages/'        '/storage/packages/';
    sub_filter  '/administration/'  '/storage/administration/';
    }

#  location /static {
#    alias /opt/storage/lib/python2.7/site-packages/storage_service/assets;
#    sub_filter_once off;
#    sub_filter  "https://{PUBLICIP}/" "https://{PUBLICIP}/storage/";
#    sub_filter  'href="/'           'href="/storage/';
#    sub_filter  "href='/"           "href='/storage/";
#    sub_filter  '/login/'           '/storage/login/';
#    sub_filter  '/pipelines/'       '/storage/pipelines/';
#    sub_filter  '/spaces/'          '/storage/spaces/';
#    sub_filter  '/locations/'       '/storage/locations/';
#    sub_filter  '/packages/'        '/storage/packages/';
#    sub_filter  '/administration/'  '/storage/administration/';
#  }
}
